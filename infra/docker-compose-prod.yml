version: '3.9'

services:
  pet-alert-db:
    image: postgres:17.2-alpine
    volumes:
      - database:/var/lib/postgresql/data/
    env_file:
      - config/.env
    restart: always

  pet-alert-redis:
    image: redis
    restart: always

  pet-alert-backend:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ./entrypoint_server.sh
    restart: always
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    depends_on:
      - pet-alert-db
    env_file:
      - config/.env

  pet-alert-worker:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ./entrypoint_worker.sh
    restart: always
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    depends_on:
      - pet-alert-backend
    env_file:
      - config/.env

  pet-alert-nginx:
    image: nginx:1.27.4-alpine
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ${PET_MAIN_NGINX_CONF-./nginx/nginx_pet_alert.template}:/etc/nginx/templates/default.conf.template
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/bot.conf:/etc/nginx/conf.d/bot.conf
      - ./nginx/bot_include.conf:/etc/nginx/vhosts-includes/bot.conf
      - static_volume:/var/html/static/
      - media_volume:/var/html/media/
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    env_file:
      - config/.env
    depends_on:
      - pet-alert-backend

  pet-alert-certbot:
    image: certbot/certbot
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    env_file:
       - config/.env
    depends_on:
      - pet-alert-nginx
    command: certonly --webroot -w /var/www/certbot --force-renewal --email admin@${WEBSITE_HOST} -d ${WEBSITE_HOST} --agree-tos

volumes:
  database:
  static_volume:
  media_volume:
  certbot_conf:
  certbot_www:
